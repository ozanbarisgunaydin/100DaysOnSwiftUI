
// MARK: - Stepper
/*
struct ContentView: View {
    @State private var sleepAmount = 8.0
    
    var body: some View {
        Stepper(
            "\(sleepAmount.formatted()) hours",
            value: $sleepAmount,
            in: 4...12,
            step: 0.25
        )
    }
}
 
// MARK: - Date Picker
struct ContentView: View {
    @State private var wakeUp = Date.now
    
    var body: some View {
        DatePicker(
            "Please enter a date",
            selection: $wakeUp,
            //            displayedComponents: .hourAndMinute /// Hides the date part
            in: Date.now... /// Hides the past dates on picker (determines the range)
        )
        .labelsHidden() /// Voice over nows what is this date picker by this way and the picker desc. hidden
    }
    
    func exampleDates() {
        let tomorrow = Date.now.addingTimeInterval(86400)
        let range = Date.now...tomorrow
    }
}

// MARK: - Date Formatters
struct ContentView: View {
    @State private var wakeUp = Date.now
    
    var body: some View {
        Text(Date.now.formatted(date: .long, time: .shortened))
    }
    
    func exampleDates() {
        //        var components = DateComponents()
        //        components.hour = 8
        //        components.minute = 0
        //        let date = Calendar.current.date(from: components) ?? .now
        
        let components = Calendar.current.dateComponents([.hour, .minute], from: .now)
        let hour = components.hour ?? 0
        let minute = components.minute ?? 0
    }
}
 */
